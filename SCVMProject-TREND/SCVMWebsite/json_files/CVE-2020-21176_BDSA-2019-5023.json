{
    "source": "BDSA",
    "name": "BDSA-2019-5023",
    "title": "Thinkjs Vulnerable to Blind SQL Injection (SQLi) via 'model.increment' and 'model.decrement' Functions",
    "description": "Thinkjs is vulnerable to blind SQL injection (SQLi) due to insufficient validation of user-provided input. This allows an attacker to extract information from the database associated with Thinkjs.",
    "technicalDescription": "This vulnerability exists due to insufficient input validation in the `step` variable of the `model.increment()` and `model.decrement()` functions in the file `src/model/mongo.js`. An attacker can exploit this vulnerability by adding malicious SQL statements into the `step` parameter which will be executed when either of these functions run.",
    "publishedDate": "2021-02-02T14:37:26.945Z",
    "updatedDate": "2022-01-13T16:35:22.245Z",
    "disclosureDate": "2019-05-11T00:00:00.000Z",
    "exploitPublishDate": "2019-05-11T00:00:00.000Z",
    "solution": "",
    "severity": "MEDIUM",
    "cvss2": {
        "baseScore": 5.0,
        "impactSubscore": 2.9,
        "exploitabilitySubscore": 10.0,
        "severity": "MEDIUM",
        "accessVector": "NETWORK",
        "accessComplexity": "LOW",
        "authentication": "NONE",
        "confidentialityImpact": "PARTIAL",
        "integrityImpact": "NONE",
        "availabilityImpact": "NONE",
        "temporalMetrics": {
            "exploitability": "PROOF_OF_CONCEPT",
            "remediationLevel": "UNAVAILABLE",
            "reportConfidence": "UNCORROBORATED",
            "score": 4.2
        },
        "vector": "(AV:N/AC:L/Au:N/C:P/I:N/A:N/E:POC/RL:U/RC:UR)"
    },
    "cvss3": {
        "baseScore": 7.5,
        "impactSubscore": 3.6,
        "exploitabilitySubscore": 3.9,
        "severity": "MEDIUM",
        "attackVector": "NETWORK",
        "attackComplexity": "LOW",
        "confidentialityImpact": "HIGH",
        "integrityImpact": "NONE",
        "availabilityImpact": "NONE",
        "privilegesRequired": "NONE",
        "scope": "UNCHANGED",
        "userInteraction": "NONE",
        "temporalMetrics": {
            "exploitability": "PROOF_OF_CONCEPT",
            "remediationLevel": "UNAVAILABLE",
            "reportConfidence": "REASONABLE",
            "score": 6.8
        },
        "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N/E:P/RL:U/RC:R"
    },
    "useCvss3": true,
    "classifications": [],
    "zeroDay": false,
    "underReview": false,
    "parentAdvisory": false,
    "workaround": "",
    "bdsaTags": [],
    "overallScore": 6.8,
    "_meta": {
        "allow": [
            "GET"
        ],
        "href": "https://trendmicro2.app.blackduck.com/api/vulnerabilities/BDSA-2019-5023",
        "links": [
            {
                "rel": "cwes",
                "href": "https://trendmicro2.app.blackduck.com/api/cwes/CWE-89"
            },
            {
                "rel": "related-vulnerability",
                "href": "https://trendmicro2.app.blackduck.com/api/vulnerabilities/CVE-2020-21176",
                "label": "NVD"
            },
            {
                "rel": "bdsa-ranges",
                "href": "https://trendmicro2.app.blackduck.com/api/vulnerabilities/BDSA-2019-5023/ranges"
            },
            {
                "rel": "reference",
                "href": "https://blog.jiguang.xyz/posts/thinkjs-sql-injection/",
                "label": "ADVISORY"
            },
            {
                "rel": "reference",
                "href": "https://blog.jiguang.xyz/posts/thinkjs-sql-injection/",
                "label": "POC"
            },
            {
                "rel": "default-remediation-status",
                "href": "https://trendmicro2.app.blackduck.com/api/vulnerabilities/BDSA-2019-5023/default-remediation-status"
            }
        ]
    }
}