{
    "source": "BDSA",
    "name": "BDSA-2021-0848",
    "title": "Eclipse Jetty Vulnerable to Denial-of-Service (DoS) via Invalid TLS Frame",
    "description": "Eclipse Jetty is vulnerable to Denial-of-Service (DoS) via invalid TLS frames. An attacker could exploit this by sending a TLS frame with a size in excess of 17408 resulting in excessive resource consumption leading to a DoS condition.",
    "technicalDescription": "This issue occurs in the `fill()` function of the `jetty-io/src/main/java/org/eclipse/jetty/io/ssl/SslConnection.java` file due to improper size checks. It was mitigated by the implementation of more stringent bounds checking designed to ensure that spinning is avoided if the input buffer is full.",
    "publishedDate": "2021-04-02T10:29:28.235Z",
    "updatedDate": "2021-05-04T10:25:05.549Z",
    "disclosureDate": "2021-04-01T00:00:00.000Z",
    "exploitPublishDate": "2021-03-18T00:00:00.000Z",
    "solution": "Fixed in [**10.0.2**](https://github.com/eclipse/jetty.project/releases/tag/jetty-10.0.2) and [**11.0.2**](https://github.com/eclipse/jetty.project/releases/tag/jetty-11.0.2) by [this](https://github.com/eclipse/jetty.project/commit/be22761a20a1685365c8e0356bf09b47e574cfd9) and [this](https://github.com/eclipse/jetty.project/commit/039c7386d0f3087d7c8aa19ea6001b24c95b9f16) commit.\nFixed in [**9.4.39.v20210325**](https://github.com/eclipse/jetty.project/releases/tag/jetty-9.4.39.v20210325) by [this](https://github.com/eclipse/jetty.project/commit/00d379c94ba865dced2025c2d1bc3e2e0e41e880) and [this](https://github.com/eclipse/jetty.project/commit/294b2ba02b667548617a94cd99592110ac230add) commit. \n\nThe latest stable releases are available [here](https://github.com/eclipse/jetty.project/releases).",
    "severity": "MEDIUM",
    "cvss2": {
        "baseScore": 5.0,
        "impactSubscore": 2.9,
        "exploitabilitySubscore": 10.0,
        "severity": "LOW",
        "accessVector": "NETWORK",
        "accessComplexity": "LOW",
        "authentication": "NONE",
        "confidentialityImpact": "NONE",
        "integrityImpact": "NONE",
        "availabilityImpact": "PARTIAL",
        "temporalMetrics": {
            "exploitability": "PROOF_OF_CONCEPT",
            "remediationLevel": "OFFICIAL_FIX",
            "reportConfidence": "CONFIRMED",
            "score": 3.9
        },
        "vector": "(AV:N/AC:L/Au:N/C:N/I:N/A:P/E:POC/RL:OF/RC:C)"
    },
    "cvss3": {
        "baseScore": 7.5,
        "impactSubscore": 3.6,
        "exploitabilitySubscore": 3.9,
        "severity": "MEDIUM",
        "attackVector": "NETWORK",
        "attackComplexity": "LOW",
        "confidentialityImpact": "NONE",
        "integrityImpact": "NONE",
        "availabilityImpact": "HIGH",
        "privilegesRequired": "NONE",
        "scope": "UNCHANGED",
        "userInteraction": "NONE",
        "temporalMetrics": {
            "exploitability": "PROOF_OF_CONCEPT",
            "remediationLevel": "OFFICIAL_FIX",
            "reportConfidence": "CONFIRMED",
            "score": 6.7
        },
        "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H/E:P/RL:O/RC:C"
    },
    "useCvss3": true,
    "classifications": [],
    "zeroDay": false,
    "underReview": false,
    "parentAdvisory": false,
    "workaround": "The problem can be worked around by compiling the following class:\n```\npackage org.eclipse.jetty.server.ssl.fix6072;\n\nimport java.nio.ByteBuffer;\nimport javax.net.ssl.SSLEngine;\nimport javax.net.ssl.SSLEngineResult;\nimport javax.net.ssl.SSLException;\nimport javax.net.ssl.SSLHandshakeException;\n\nimport org.eclipse.jetty.io.EndPoint;\nimport org.eclipse.jetty.io.ssl.SslConnection;\nimport org.eclipse.jetty.server.Connector;\nimport org.eclipse.jetty.server.SslConnectionFactory;\nimport org.eclipse.jetty.util.BufferUtil;\nimport org.eclipse.jetty.util.annotation.Name;\nimport org.eclipse.jetty.util.ssl.SslContextFactory;\n\npublic class SpaceCheckingSslConnectionFactory extends SslConnectionFactory\n{\n    public SpaceCheckingSslConnectionFactory(@Name(\"sslContextFactory\") SslContextFactory factory, @Name(\"next\") String nextProtocol)\n    {\n        super(factory, nextProtocol);\n    }\n\n    @Override\n    protected SslConnection newSslConnection(Connector connector, EndPoint endPoint, SSLEngine engine)\n    {\n        return new SslConnection(connector.getByteBufferPool(), connector.getExecutor(), endPoint, engine, isDirectBuffersForEncryption(), isDirectBuffersForDecryption())\n        {\n            @Override\n            protected SSLEngineResult unwrap(SSLEngine sslEngine, ByteBuffer input, ByteBuffer output) throws SSLException\n            {\n                SSLEngineResult results = super.unwrap(sslEngine, input, output);\n\n                if ((results.getStatus() == SSLEngineResult.Status.BUFFER_UNDERFLOW ||\n                    results.getStatus() == SSLEngineResult.Status.OK && results.bytesConsumed() == 0 && results.bytesProduced() == 0) &&\n                    BufferUtil.space(input) == 0)\n                {\n                    BufferUtil.clear(input);\n                    throw new SSLHandshakeException(\"Encrypted buffer max length exceeded\");\n                }\n                return results;\n            }\n        };\n    }\n}\n```\n\nThis class can be deployed by:\n* The resulting class file should be put into a jar file (eg `sslfix6072.jar`)\n* The jar file should be made available to the server. For a normal distribution this can be done by putting the file into `${jetty.base}/lib`\n* Copy the file `${jetty.home}/modules/ssl.mod` to `${jetty.base}/modules`\n* Edit the `${jetty.base}/modules/ssl.mod` file to have the following section:\n```\n[lib]\nlib/sslfix6072.jar\n```\n\n* Copy the file `${jetty.home}/etc/jetty-https.xml` and `${jetty.home}/etc/jetty-http2.xml` to `${jetty.base}/etc`\n* Edit files `${jetty.base}/etc/jetty-https.xml` and `${jetty.base}/etc/jetty-http2.xml`, changing any reference of `org.eclipse.jetty.server.SslConnectionFactory` to `org.eclipse.jetty.server.ssl.fix6072.SpaceCheckingSslConnectionFactory`. \n\nFor example:\n```\n  <Call name=\"addIfAbsentConnectionFactory\">\n    <Arg>\n      <New class=\"org.eclipse.jetty.server.ssl.fix6072.SpaceCheckingSslConnectionFactory\">\n        <Arg name=\"next\">http/1.1</Arg>\n        <Arg name=\"sslContextFactory\"><Ref refid=\"sslContextFactory\"/></Arg>\n      </New>\n    </Arg>\n  </Call>\n```\nRestart Jetty",
    "vendorFixDate": "2021-03-22T00:00:00.000Z",
    "bdsaTags": [],
    "overallScore": 6.7,
    "_meta": {
        "allow": [
            "GET"
        ],
        "href": "https://trendmicro2.app.blackduck.com/api/vulnerabilities/BDSA-2021-0848",
        "links": [
            {
                "rel": "cwes",
                "href": "https://trendmicro2.app.blackduck.com/api/cwes/CWE-400"
            },
            {
                "rel": "related-vulnerability",
                "href": "https://trendmicro2.app.blackduck.com/api/vulnerabilities/CVE-2021-28165",
                "label": "NVD"
            },
            {
                "rel": "bdsa-ranges",
                "href": "https://trendmicro2.app.blackduck.com/api/vulnerabilities/BDSA-2021-0848/ranges"
            },
            {
                "rel": "reference",
                "href": "https://github.com/eclipse/jetty.project/commit/00d379c94ba865dced2025c2d1bc3e2e0e41e880",
                "label": "PATCH"
            },
            {
                "rel": "reference",
                "href": "https://github.com/eclipse/jetty.project/commit/039c7386d0f3087d7c8aa19ea6001b24c95b9f16",
                "label": "PATCH"
            },
            {
                "rel": "reference",
                "href": "https://github.com/eclipse/jetty.project/commit/294b2ba02b667548617a94cd99592110ac230add",
                "label": "PATCH"
            },
            {
                "rel": "reference",
                "href": "https://github.com/eclipse/jetty.project/commit/be22761a20a1685365c8e0356bf09b47e574cfd9",
                "label": "PATCH"
            },
            {
                "rel": "reference",
                "href": "https://github.com/eclipse/jetty.project/issues/6072",
                "label": "ADVISORY"
            },
            {
                "rel": "reference",
                "href": "https://github.com/eclipse/jetty.project/issues/6072",
                "label": "POC"
            },
            {
                "rel": "reference",
                "href": "https://github.com/eclipse/jetty.project/releases",
                "label": "VENDOR_UPGRADE"
            },
            {
                "rel": "reference",
                "href": "https://github.com/eclipse/jetty.project/releases/tag/jetty-10.0.2",
                "label": "VENDOR_UPGRADE"
            },
            {
                "rel": "reference",
                "href": "https://github.com/eclipse/jetty.project/releases/tag/jetty-11.0.2",
                "label": "VENDOR_UPGRADE"
            },
            {
                "rel": "reference",
                "href": "https://github.com/eclipse/jetty.project/releases/tag/jetty-9.4.39.v20210325",
                "label": "VENDOR_UPGRADE"
            },
            {
                "rel": "reference",
                "href": "https://github.com/eclipse/jetty.project/security/advisories/GHSA-26vr-8j45-3r4w",
                "label": "ADVISORY"
            },
            {
                "rel": "reference",
                "href": "https://github.com/eclipse/jetty.project/security/advisories/GHSA-26vr-8j45-3r4w",
                "label": "WORKAROUND"
            },
            {
                "rel": "default-remediation-status",
                "href": "https://trendmicro2.app.blackduck.com/api/vulnerabilities/BDSA-2021-0848/default-remediation-status"
            }
        ]
    }
}