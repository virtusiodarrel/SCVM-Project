{
    "source": "BDSA",
    "name": "BDSA-2020-0881",
    "title": "Phproject Vulnerable to Remote Code Execution (RCE) via Unsafe File Upload in 'upload()' Function",
    "description": "Phproject is vulnerable to remote code execution (RCE) due to the unsafe implementation of file upload functionality. A remote authenticated attacker could execute malicious scripts on a vulnerable server by utilizing this functionality.",
    "technicalDescription": "The function `upload()`, which is defined within `issues.php`, contains code that is used to provide file upload functionality to users. This function does not perform any checks to ensure that the file being uploaded does not contain PHP code.  The uploaded files are not intended to be accessible by users, with the filename being modified with time stamp information. However, it is trivial for a user to determine what the modified file name will be. A remote attacker with access to the file upload interface could therefore achieve code execution by uploading a maliciously crafted PHP file, and then navigating to that file so that it is executed by the server.\n\nIt should be noted that this vulnerability can still be exploited on a patched server if a non-standard configuration in use (for example, if the Phproject file-type blacklist has been modified or removed).",
    "publishedDate": "2020-04-28T13:40:01.385Z",
    "updatedDate": "2021-10-14T15:06:17.949Z",
    "disclosureDate": "2020-04-21T00:00:00.000Z",
    "solution": "Fixed in version [**1.7.8**](https://github.com/Alanaktion/phproject/releases/tag/v1.7.8) by [this](https://github.com/Alanaktion/phproject/commit/b49d642e035d835f824bd39babd964ec0e3a285f) commit.\n\nThe latest stable releases are available [here](https://github.com/Alanaktion/phproject/releases).",
    "severity": "HIGH",
    "cvss2": {
        "baseScore": 6.0,
        "impactSubscore": 6.4,
        "exploitabilitySubscore": 6.8,
        "severity": "MEDIUM",
        "accessVector": "NETWORK",
        "accessComplexity": "MEDIUM",
        "authentication": "SINGLE",
        "confidentialityImpact": "PARTIAL",
        "integrityImpact": "PARTIAL",
        "availabilityImpact": "PARTIAL",
        "temporalMetrics": {
            "exploitability": "UNPROVEN",
            "remediationLevel": "OFFICIAL_FIX",
            "reportConfidence": "CONFIRMED",
            "score": 4.4
        },
        "vector": "(AV:N/AC:M/Au:S/C:P/I:P/A:P/E:U/RL:OF/RC:C)"
    },
    "cvss3": {
        "baseScore": 9.9,
        "impactSubscore": 6.0,
        "exploitabilitySubscore": 3.1,
        "severity": "HIGH",
        "attackVector": "NETWORK",
        "attackComplexity": "LOW",
        "confidentialityImpact": "HIGH",
        "integrityImpact": "HIGH",
        "availabilityImpact": "HIGH",
        "privilegesRequired": "LOW",
        "scope": "CHANGED",
        "userInteraction": "NONE",
        "temporalMetrics": {
            "exploitability": "UNPROVEN",
            "remediationLevel": "OFFICIAL_FIX",
            "reportConfidence": "CONFIRMED",
            "score": 8.6
        },
        "vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:C/C:H/I:H/A:H/E:U/RL:O/RC:C"
    },
    "useCvss3": true,
    "classifications": [],
    "zeroDay": false,
    "underReview": false,
    "parentAdvisory": false,
    "workaround": "The vendor states that users who cannot upgrade to version **1.7.8** should disallow PHP execution from the upload directory. To achieve this on an Apache web server, create a `.htaccess` file in the `uploads` directory with the entry `Deny from all`. To achieve this on a Nginx web server,  the following regular expression location block for the `uploads` directory can be added to the Phproject server block:\n\n`location ~ ^/uploads/ {\n    deny all;\n}`",
    "vendorFixDate": "2020-04-20T00:00:00.000Z",
    "bdsaTags": [
        "RCE"
    ],
    "overallScore": 8.6,
    "_meta": {
        "allow": [
            "GET"
        ],
        "href": "https://trendmicro2.app.blackduck.com/api/vulnerabilities/BDSA-2020-0881",
        "links": [
            {
                "rel": "cwes",
                "href": "https://trendmicro2.app.blackduck.com/api/cwes/CWE-434"
            },
            {
                "rel": "related-vulnerability",
                "href": "https://trendmicro2.app.blackduck.com/api/vulnerabilities/CVE-2020-11011",
                "label": "NVD"
            },
            {
                "rel": "bdsa-ranges",
                "href": "https://trendmicro2.app.blackduck.com/api/vulnerabilities/BDSA-2020-0881/ranges"
            },
            {
                "rel": "reference",
                "href": "https://github.com/Alanaktion/phproject/commit/b49d642e035d835f824bd39babd964ec0e3a285f",
                "label": "PATCH"
            },
            {
                "rel": "reference",
                "href": "https://github.com/Alanaktion/phproject/releases",
                "label": "VENDOR_UPGRADE"
            },
            {
                "rel": "reference",
                "href": "https://github.com/Alanaktion/phproject/releases/tag/v1.7.8",
                "label": "VENDOR_UPGRADE"
            },
            {
                "rel": "reference",
                "href": "https://github.com/Alanaktion/phproject/security/advisories/GHSA-4j97-6w6q-gxjx",
                "label": "ADVISORY"
            },
            {
                "rel": "reference",
                "href": "https://github.com/Alanaktion/phproject/security/advisories/GHSA-4j97-6w6q-gxjx",
                "label": "WORKAROUND"
            },
            {
                "rel": "default-remediation-status",
                "href": "https://trendmicro2.app.blackduck.com/api/vulnerabilities/BDSA-2020-0881/default-remediation-status"
            }
        ]
    }
}