{
    "source": "BDSA",
    "name": "BDSA-2021-0677",
    "title": "Linux Kernel Vulnerable to Information Disclosure via Untrusted Pointer Dereference in 'setsockopt' System Call",
    "description": "Linux Kernel does not properly validate the arguments given to the `setsockopt` system call before they are processed further. A privileged attacker could supply malicious values i.e. pointers which will then be dereferenced. This could lead to disclosure of sensitive information like internal addresses.",
    "technicalDescription": "Exploitation of this vulnerability requires an attacker to have the `CAP_NET_ADMIN` capability. They can use this capability to attach an `ebpf` filter to the `setsockopt` system call. When a filter has been attached, arguments can be passed to it. These arguments can be saved into the kernel memory. The `source/kernel/bpf/cgroup.c` file usually handles this process. This file also contains a method named `copy_from_user()` that won't work if the arguments are saved in the memory. This happens because the address being handled is not a `userland` address. \nAs a solution, the `set_fs(KERNEL_DS)` method in `source/net/socket.c` is used to expand the `userland` address range temporarily. However, after this method is called, the `optval` variable is set. The pointers contained within the structure of `optval` can be manipulated by an attacker. Whether any controllable pointers exist depends on the kind of filter that has been originally attached. \n\nAccordingly, the attacker could use `SO_ATTACH_FILTER`. This will result in the `fprog` structure being used as an argument for `copy_from_user()` function. But `fprog` contains a pointer that an attacker can manipulate. It can be used to launch an attack based on query-response. If a query returns `EINVAL`, then the attacker will know that the relevant memory address is valid. If the response contains `EFAULT`, then the address will be invalid. This knowledge about kernel addresses can allow the attacker to bypass Kernel's address space layout randomization (KASLR). This measure makes exploitation harder by randomizing the addresses allocated for a process.\n\nAn attacker could use the `set_meaningless_filter.c` file to set the filter to `cgroup`. Then, they could use the `kaslr_bypass` file to run through different addresses and obtain a valid kernel address range.",
    "publishedDate": "2021-03-17T14:07:50.869Z",
    "updatedDate": "2021-03-17T14:07:50.862Z",
    "disclosureDate": "2021-01-29T00:00:00.000Z",
    "exploitPublishDate": "2021-01-29T00:00:00.000Z",
    "solution": "Fixed in [**5.4.92**](https://www.kernel.org) by [this](https://git.kernel.org/pub/scm/linux/kernel/git/stable/linux-stable.git/commit/?id=55bac51762c39ef033b488dd09b60d48908d317f) commit.\n\nThe latest stable releases are available [here](https://www.kernel.org).",
    "severity": "LOW",
    "cvss2": {
        "baseScore": 1.7,
        "impactSubscore": 2.9,
        "exploitabilitySubscore": 3.1,
        "severity": "LOW",
        "accessVector": "LOCAL",
        "accessComplexity": "LOW",
        "authentication": "SINGLE",
        "confidentialityImpact": "PARTIAL",
        "integrityImpact": "NONE",
        "availabilityImpact": "NONE",
        "temporalMetrics": {
            "exploitability": "PROOF_OF_CONCEPT",
            "remediationLevel": "OFFICIAL_FIX",
            "reportConfidence": "CONFIRMED",
            "score": 1.4
        },
        "vector": "(AV:L/AC:L/Au:S/C:P/I:N/A:N/E:POC/RL:OF/RC:C)"
    },
    "cvss3": {
        "baseScore": 3.2,
        "impactSubscore": 1.4,
        "exploitabilitySubscore": 1.5,
        "severity": "LOW",
        "attackVector": "LOCAL",
        "attackComplexity": "LOW",
        "confidentialityImpact": "LOW",
        "integrityImpact": "NONE",
        "availabilityImpact": "NONE",
        "privilegesRequired": "HIGH",
        "scope": "CHANGED",
        "userInteraction": "NONE",
        "temporalMetrics": {
            "exploitability": "PROOF_OF_CONCEPT",
            "remediationLevel": "OFFICIAL_FIX",
            "reportConfidence": "CONFIRMED",
            "score": 2.9
        },
        "vector": "CVSS:3.1/AV:L/AC:L/PR:H/UI:N/S:C/C:L/I:N/A:N/E:P/RL:O/RC:C"
    },
    "useCvss3": true,
    "classifications": [],
    "zeroDay": false,
    "underReview": false,
    "parentAdvisory": false,
    "credit": "Ryota Shiga of Flatt Security",
    "workaround": "",
    "vendorFixDate": "2021-01-22T00:00:00.000Z",
    "vendorNotifiedDate": "2020-12-22T00:00:00.000Z",
    "bdsaTags": [],
    "overallScore": 2.9,
    "_meta": {
        "allow": [],
        "href": "https://trendmicro.app.blackduck.com/api/vulnerabilities/BDSA-2021-0677",
        "links": [
            {
                "rel": "cwes",
                "href": "https://trendmicro.app.blackduck.com/api/cwes/CWE-20"
            },
            {
                "rel": "cwes",
                "href": "https://trendmicro.app.blackduck.com/api/cwes/CWE-200"
            },
            {
                "rel": "related-vulnerability",
                "href": "https://trendmicro.app.blackduck.com/api/vulnerabilities/CVE-2021-20239",
                "label": "NVD"
            },
            {
                "rel": "bdsa-ranges",
                "href": "https://trendmicro.app.blackduck.com/api/vulnerabilities/BDSA-2021-0677/ranges"
            },
            {
                "rel": "reference",
                "href": "https://bugzilla.redhat.com/show_bug.cgi?id=1923636",
                "label": "ADVISORY"
            },
            {
                "rel": "reference",
                "href": "https://gist.github.com/Ga-ryo/2ec958e78f55c5d18558960f3fe1c6ec",
                "label": "ADVISORY"
            },
            {
                "rel": "reference",
                "href": "https://gist.github.com/Ga-ryo/2ec958e78f55c5d18558960f3fe1c6ec",
                "label": "POC"
            },
            {
                "rel": "reference",
                "href": "https://git.kernel.org/pub/scm/linux/kernel/git/stable/linux.git/commit/?id=0d01da6afc5402f60325c5da31b22f7d56689b49",
                "label": "INTRODUCTORY_COMMIT"
            },
            {
                "rel": "reference",
                "href": "https://git.kernel.org/pub/scm/linux/kernel/git/stable/linux.git/commit/?id=55bac51762c39ef033b488dd09b60d48908d317f",
                "label": "PATCH"
            },
            {
                "rel": "reference",
                "href": "https://www.kernel.org",
                "label": "VENDOR_UPGRADE"
            },
            {
                "rel": "reference",
                "href": "https://www.zerodayinitiative.com/advisories/ZDI-21-100/",
                "label": "ADVISORY"
            }
        ]
    }
}