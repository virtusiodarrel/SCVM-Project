{
    "source": "BDSA",
    "name": "BDSA-2021-4481",
    "title": "ModSecurity Vulnerable to Denial-of-Service (DoS) via Specially Crafted Nested JSON Causing Excessive CPU Usage",
    "description": "ModSecurity is vulnerable to using excessive CPU cycles when supplied with deeply nested JSON input. A remote attacker that is able to send JSON data and have it processed by ModSecurity could cause a denial-of-service (DoS).",
    "technicalDescription": "The flaw exists because there is no limit on depth of JSON parsing in any of the JSON parsing code.\n\nThe issue was fixed by adding a configurable limit for the maximum nested depth of JSON input.",
    "publishedDate": "2022-07-07T15:06:40.861Z",
    "updatedDate": "2022-07-07T15:06:40.850Z",
    "disclosureDate": "2021-11-24T00:00:00.000Z",
    "exploitPublishDate": "2021-11-24T00:00:00.000Z",
    "solution": "Fixed in version [**3.0.6**](https://github.com/SpiderLabs/ModSecurity/releases/tag/v3.0.6) by [this](https://github.com/SpiderLabs/ModSecurity/commit/ac79c1c29b7e6323e26cc984ad4f76ef62c731cd) commit.\n\nFixed in version [**2.9.5**](https://github.com/SpiderLabs/ModSecurity/releases/tag/v2.9.5) by [this](https://github.com/SpiderLabs/ModSecurity/commit/41918335fa4c74fba46a986771a5a6cb457070c4) commit.\n\nThe latest releases can be found [here](https://github.com/SpiderLabs/ModSecurity/tags).",
    "severity": "MEDIUM",
    "cvss2": {
        "baseScore": 5.0,
        "impactSubscore": 2.9,
        "exploitabilitySubscore": 10.0,
        "severity": "LOW",
        "accessVector": "NETWORK",
        "accessComplexity": "LOW",
        "authentication": "NONE",
        "confidentialityImpact": "NONE",
        "integrityImpact": "NONE",
        "availabilityImpact": "PARTIAL",
        "temporalMetrics": {
            "exploitability": "PROOF_OF_CONCEPT",
            "remediationLevel": "OFFICIAL_FIX",
            "reportConfidence": "CONFIRMED",
            "score": 3.9
        },
        "vector": "(AV:N/AC:L/Au:N/C:N/I:N/A:P/E:POC/RL:OF/RC:C)"
    },
    "cvss3": {
        "baseScore": 7.5,
        "impactSubscore": 3.6,
        "exploitabilitySubscore": 3.9,
        "severity": "MEDIUM",
        "attackVector": "NETWORK",
        "attackComplexity": "LOW",
        "confidentialityImpact": "NONE",
        "integrityImpact": "NONE",
        "availabilityImpact": "HIGH",
        "privilegesRequired": "NONE",
        "scope": "UNCHANGED",
        "userInteraction": "NONE",
        "temporalMetrics": {
            "exploitability": "PROOF_OF_CONCEPT",
            "remediationLevel": "OFFICIAL_FIX",
            "reportConfidence": "CONFIRMED",
            "score": 6.7
        },
        "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H/E:P/RL:O/RC:C"
    },
    "useCvss3": true,
    "classifications": [],
    "zeroDay": false,
    "underReview": false,
    "parentAdvisory": false,
    "credit": "Trustwave SpiderLabs",
    "workaround": "Several workarounds are proposed [here](https://www.trustwave.com/en-us/resources/blogs/spiderlabs-blog/modsecurity-dos-vulnerability-in-json-parsing-cve-2021-42717/):\n> 1) None of my web applications accept JSON request bodies\n> \n> Possible Mitigation:  Disable any ModSecurity rules that activate the JSON parser.\n> \n> 2) Some of my web applications accept JSON request bodies but they are all small\n> \n> Possible Mitigation:  Create a phase:1 chained rule that will reject requests that would use the JSON parser if the Content-Length exceeds a certain size (10,000 to 20,000 bytes is likely safe in most installations).  Some v2 users may alternatively be able to make use of the SecRequestBodyNoFilesLimit configuration item if other non-file request bodies are likewise expected to be below similar thresholds. Special note to users with ModSecurity <v2.9.3:  although the problem exists in earlier versions like v2.9.2, it appears to require a larger request body size to trigger problematic delays, which means that limits involving the request body size can probably be larger (perhaps 40,000 to 50,000 bytes) and still provide decent protection in most installations.\n> \n> 3) A few of my web applications expect larger JSON request bodies\n> \n> Possible Mitigation:  Consider creating a rule as in (2) above but do not have it run for the cases where such larger request bodies are expected. Limiting the application could be done either with an additional rule in the chain, or by removing the rule at runtime (e.g. ctl:ruleRemoveById) when relevant conditions have been met. This approach does not provide robust protection, but it may provide reasonable protection against less-motivated attackers.",
    "vendorFixDate": "2021-11-19T00:00:00.000Z",
    "bdsaTags": [],
    "overallScore": 6.7,
    "_meta": {
        "allow": [
            "GET"
        ],
        "href": "https://trendmicro2.app.blackduck.com/api/vulnerabilities/BDSA-2021-4481",
        "links": [
            {
                "rel": "cwes",
                "href": "https://trendmicro2.app.blackduck.com/api/cwes/CWE-400"
            },
            {
                "rel": "related-vulnerability",
                "href": "https://trendmicro2.app.blackduck.com/api/vulnerabilities/CVE-2021-42717",
                "label": "NVD"
            },
            {
                "rel": "bdsa-ranges",
                "href": "https://trendmicro2.app.blackduck.com/api/vulnerabilities/BDSA-2021-4481/ranges"
            },
            {
                "rel": "reference",
                "href": "https://github.com/SpiderLabs/ModSecurity/commit/41918335fa4c74fba46a986771a5a6cb457070c4",
                "label": "PATCH"
            },
            {
                "rel": "reference",
                "href": "https://github.com/SpiderLabs/ModSecurity/commit/ac79c1c29b7e6323e26cc984ad4f76ef62c731cd",
                "label": "PATCH"
            },
            {
                "rel": "reference",
                "href": "https://github.com/SpiderLabs/ModSecurity/releases/tag/v2.9.5",
                "label": "VENDOR_UPGRADE"
            },
            {
                "rel": "reference",
                "href": "https://github.com/SpiderLabs/ModSecurity/releases/tag/v3.0.6",
                "label": "VENDOR_UPGRADE"
            },
            {
                "rel": "reference",
                "href": "https://github.com/SpiderLabs/ModSecurity/tags",
                "label": "VENDOR_UPGRADE"
            },
            {
                "rel": "reference",
                "href": "https://www.trustwave.com/en-us/resources/blogs/spiderlabs-blog/modsecurity-dos-vulnerability-in-json-parsing-cve-2021-42717/",
                "label": "ADVISORY"
            },
            {
                "rel": "reference",
                "href": "https://www.trustwave.com/en-us/resources/blogs/spiderlabs-blog/modsecurity-dos-vulnerability-in-json-parsing-cve-2021-42717/",
                "label": "POC"
            },
            {
                "rel": "reference",
                "href": "https://www.trustwave.com/en-us/resources/blogs/spiderlabs-blog/modsecurity-dos-vulnerability-in-json-parsing-cve-2021-42717/",
                "label": "WORKAROUND"
            },
            {
                "rel": "default-remediation-status",
                "href": "https://trendmicro2.app.blackduck.com/api/vulnerabilities/BDSA-2021-4481/default-remediation-status"
            }
        ]
    }
}