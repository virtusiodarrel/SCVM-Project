{
    "source": "BDSA",
    "name": "BDSA-2021-2108",
    "title": "Varnish Cache Vulnerable to HTTP/2 Request Smuggling and Bypass of VCL Authorization via Excessive Content-Length Header in POST Request",
    "description": "Varnish Cache is vulnerable to **HTTP/2** request smuggling and bypass of VCL authorization via excessive content-length header in `POST` request. An attacker could exploit this in order to achieve cache poisoning or information disclosure. \n\n**Note:** Per the Vendor, \"The problem only affects servers that have HTTP/2 support enabled. This support can be turned off at runtime.\".",
    "technicalDescription": "This issue occurs in the `bin/varnishd/http2/cache_http2.h` file and the `h2_end_headers()`, `h2_rx_data()`, `h2_vfp_body()` functions of the `bin/varnishd/http2/cache_http2_proto.c` file due to missing checks relating to content length. It was mitigated by ensuring that the advertised content length is taken in to account and that it fails appropriately if the combined sum fails to match the content length.",
    "publishedDate": "2021-07-16T15:37:21.610Z",
    "updatedDate": "2021-08-25T13:23:05.203Z",
    "disclosureDate": "2021-07-13T00:00:00.000Z",
    "solution": "Fixed in:\n* [**6.6.1**](https://github.com/varnishcache/varnish-cache/releases/tag/varnish-6.6.1) by [this](https://github.com/varnishcache/varnish-cache/commit/7d73bc843ea9bff79e33773f1cfe2dffa7d03ea1) commit,\n* [**6.5.2**](https://github.com/varnishcache/varnish-cache/releases/tag/varnish-6.5.2) by [this](https://github.com/varnishcache/varnish-cache/commit/82b0a629f60136e76112c6f2c6372cce77b683be) commit,\n* [**6.0.8**](https://github.com/varnishcache/varnish-cache/releases/tag/varnish-6.0.8) by [this](https://github.com/varnishcache/varnish-cache/commit/9be22198e258d0e7a5c41f4291792214a29405cf) commit.\n\nThe latest stable releases are available [here](https://github.com/varnishcache/varnish-cache/releases).",
    "severity": "MEDIUM",
    "cvss2": {
        "baseScore": 5.0,
        "impactSubscore": 2.9,
        "exploitabilitySubscore": 10.0,
        "severity": "LOW",
        "accessVector": "NETWORK",
        "accessComplexity": "LOW",
        "authentication": "NONE",
        "confidentialityImpact": "NONE",
        "integrityImpact": "PARTIAL",
        "availabilityImpact": "NONE",
        "temporalMetrics": {
            "exploitability": "UNPROVEN",
            "remediationLevel": "OFFICIAL_FIX",
            "reportConfidence": "CONFIRMED",
            "score": 3.7
        },
        "vector": "(AV:N/AC:L/Au:N/C:N/I:P/A:N/E:U/RL:OF/RC:C)"
    },
    "cvss3": {
        "baseScore": 7.5,
        "impactSubscore": 3.6,
        "exploitabilitySubscore": 3.9,
        "severity": "MEDIUM",
        "attackVector": "NETWORK",
        "attackComplexity": "LOW",
        "confidentialityImpact": "NONE",
        "integrityImpact": "HIGH",
        "availabilityImpact": "NONE",
        "privilegesRequired": "NONE",
        "scope": "UNCHANGED",
        "userInteraction": "NONE",
        "temporalMetrics": {
            "exploitability": "UNPROVEN",
            "remediationLevel": "OFFICIAL_FIX",
            "reportConfidence": "CONFIRMED",
            "score": 6.5
        },
        "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N/E:U/RL:O/RC:C"
    },
    "useCvss3": true,
    "classifications": [],
    "zeroDay": false,
    "underReview": false,
    "parentAdvisory": false,
    "credit": "Martin Blix Grydeland of Varnish Software",
    "workaround": "To disable `HTTP/2` on a server do:\n\n`sudo varnishadm param.set feature -http2`\n\nTo verify that HTTP/2 is disabled on a server, execute this command and make sure the current value does not list `http2`:\n\n`sudo varnishadm param.show feature`\n\nWhen using in-core TLS termination, this will also remove `h2` as a supported protocol advertised through ALPN.\n\nWhen using Hitch (or any other TLS termination proxy) in front of Varnish to handle TLS termination, it is also necessary unlist the `h2` token as a possible protocol in the ALPN advertisement sent to connecting clients.\n\nTo unlist `h2` as a support protocol in Hitch, remove or comment out the line stating `alpn-protos = \"h2, http/1.1\"` in your Hitch configuration file. Then restart the Hitch service (reload is not sufficient).\n\nPreventing connection reuse \nOn compliant backends it is possible to prevent the execution of smuggled requests by disabling connection reuse of backend requests. Note that for this workaround to be effective, it relies on the backend to refuse any additional requests after seeing a `Connection: close` header.\n\nTo disable backend connection reuse, add a `Connection: close` header on the outgoing backend requests:\n\n```\nsub vcl_backend_fetch {\n\tset bereq.http.Connection = \"close\";\n}\n```",
    "vendorFixDate": "2021-06-15T00:00:00.000Z",
    "discoveryDate": "2021-05-31T00:00:00.000Z",
    "bdsaTags": [],
    "overallScore": 6.5,
    "_meta": {
        "allow": [
            "GET"
        ],
        "href": "https://trendmicro2.app.blackduck.com/api/vulnerabilities/BDSA-2021-2108",
        "links": [
            {
                "rel": "cwes",
                "href": "https://trendmicro2.app.blackduck.com/api/cwes/CWE-444"
            },
            {
                "rel": "related-vulnerability",
                "href": "https://trendmicro2.app.blackduck.com/api/vulnerabilities/CVE-2021-36740",
                "label": "NVD"
            },
            {
                "rel": "bdsa-ranges",
                "href": "https://trendmicro2.app.blackduck.com/api/vulnerabilities/BDSA-2021-2108/ranges"
            },
            {
                "rel": "reference",
                "href": "https://docs.varnish-software.com/security/VSV00007/",
                "label": "ADVISORY"
            },
            {
                "rel": "reference",
                "href": "https://docs.varnish-software.com/security/VSV00007/",
                "label": "WORKAROUND"
            },
            {
                "rel": "reference",
                "href": "https://github.com/varnishcache/varnish-cache/commit/7d73bc843ea9bff79e33773f1cfe2dffa7d03ea1",
                "label": "PATCH"
            },
            {
                "rel": "reference",
                "href": "https://github.com/varnishcache/varnish-cache/commit/82b0a629f60136e76112c6f2c6372cce77b683be",
                "label": "PATCH"
            },
            {
                "rel": "reference",
                "href": "https://github.com/varnishcache/varnish-cache/commit/9be22198e258d0e7a5c41f4291792214a29405cf",
                "label": "PATCH"
            },
            {
                "rel": "reference",
                "href": "https://github.com/varnishcache/varnish-cache/releases",
                "label": "VENDOR_UPGRADE"
            },
            {
                "rel": "reference",
                "href": "https://github.com/varnishcache/varnish-cache/releases/tag/varnish-6.0.8",
                "label": "VENDOR_UPGRADE"
            },
            {
                "rel": "reference",
                "href": "https://github.com/varnishcache/varnish-cache/releases/tag/varnish-6.5.2",
                "label": "VENDOR_UPGRADE"
            },
            {
                "rel": "reference",
                "href": "https://github.com/varnishcache/varnish-cache/releases/tag/varnish-6.6.1",
                "label": "VENDOR_UPGRADE"
            },
            {
                "rel": "reference",
                "href": "https://varnish-cache.org/security/VSV00007.html",
                "label": "ADVISORY"
            },
            {
                "rel": "default-remediation-status",
                "href": "https://trendmicro2.app.blackduck.com/api/vulnerabilities/BDSA-2021-2108/default-remediation-status"
            }
        ]
    }
}