{
    "source": "BDSA",
    "name": "BDSA-2020-4163",
    "title": "PyYAML Vulnerable to Arbitrary Code Execution via Incomplete Fix in 'python/object/new constructor'",
    "description": "PyYAML library contains an arbitrary code execution vulnerability due to the use of the `full_load` method or with the `FullLoader` loader when parsing untrusted data. This could allow an attacker could exploit this flaw by supplying crafted YAML file that can result in code execution.\nThis issue exists due to an incomplete fix for CVE-2020-1747, BDSA-2020-0504.",
    "technicalDescription": "The arbitrary code execution vulnerability can occur when a python object is deserialized and constructed (`python/object/new`) when calling `yaml.load`. This is due to the `set_python_instance_state` function in `lib/yaml/constructor.py` and `lib3/yaml/constructor.py` not sufficiently sanitizing input containing malicious keys in a dict. The `set_python_instance_state` function is used to set the state of a deserialized python object.    \n\nWhen calling `yaml.load` in user code, the default `Loader` used is `Loader=yaml.FullLoader` which is considered safe. The constructor generated can call `set_python_instance_state`. If an attacker supplies crafted YAML containing functions such as `extend`, or special methods denoted by a trailing and proceeding underscore character, constructing the object may result in the execution of unwanted code.\n\nThe vulnerability exists due to an incomplete fix for CVE-2020-1747(BDSA-2020-0504). The incomplete fix attempted to mitigate the issue by implementing  a blacklist that prevented some properties from being set when deserializing python objects. However an attacker could bypass this protection mechanism by carefully nesting objects. \n\nThe issue was addressed by reconfiguring constructors from `full_load` to `unsafe_load`.",
    "publishedDate": "2021-02-10T15:08:21.636Z",
    "updatedDate": "2021-02-10T15:08:21.627Z",
    "disclosureDate": "2020-07-22T00:00:00.000Z",
    "exploitPublishDate": "2020-07-22T00:00:00.000Z",
    "solution": "Fixed in version [**5.4b1**](https://github.com/yaml/pyyaml/commits/5.4b1) by [this](https://github.com/yaml/pyyaml/commit/a001f2782501ad2d24986959f0239a354675f9dc) commit.\n\nThe latest stable releases are available [here](https://github.com/yaml/pyyaml/tags).",
    "severity": "HIGH",
    "cvss2": {
        "baseScore": 7.5,
        "impactSubscore": 6.4,
        "exploitabilitySubscore": 10.0,
        "severity": "MEDIUM",
        "accessVector": "NETWORK",
        "accessComplexity": "LOW",
        "authentication": "NONE",
        "confidentialityImpact": "PARTIAL",
        "integrityImpact": "PARTIAL",
        "availabilityImpact": "PARTIAL",
        "temporalMetrics": {
            "exploitability": "PROOF_OF_CONCEPT",
            "remediationLevel": "OFFICIAL_FIX",
            "reportConfidence": "CONFIRMED",
            "score": 5.9
        },
        "vector": "(AV:N/AC:L/Au:N/C:P/I:P/A:P/E:POC/RL:OF/RC:C)"
    },
    "cvss3": {
        "baseScore": 9.8,
        "impactSubscore": 5.9,
        "exploitabilitySubscore": 3.9,
        "severity": "HIGH",
        "attackVector": "NETWORK",
        "attackComplexity": "LOW",
        "confidentialityImpact": "HIGH",
        "integrityImpact": "HIGH",
        "availabilityImpact": "HIGH",
        "privilegesRequired": "NONE",
        "scope": "UNCHANGED",
        "userInteraction": "NONE",
        "temporalMetrics": {
            "exploitability": "PROOF_OF_CONCEPT",
            "remediationLevel": "OFFICIAL_FIX",
            "reportConfidence": "CONFIRMED",
            "score": 8.8
        },
        "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H/E:P/RL:O/RC:C"
    },
    "useCvss3": true,
    "classifications": [],
    "zeroDay": false,
    "underReview": false,
    "parentAdvisory": false,
    "credit": "arxenix",
    "workaround": "A third party workaround is available: \n\n\"To mitigate this vulnerability, explicitly use `yaml.safe_load` or the SafeLoader loader when you parse untrusted input.\"",
    "vendorFixDate": "2021-01-09T00:00:00.000Z",
    "bdsaTags": [
        "RCE"
    ],
    "overallScore": 8.8,
    "_meta": {
        "allow": [
            "GET"
        ],
        "href": "https://trendmicro2.app.blackduck.com/api/vulnerabilities/BDSA-2020-4163",
        "links": [
            {
                "rel": "cwes",
                "href": "https://trendmicro2.app.blackduck.com/api/cwes/CWE-502"
            },
            {
                "rel": "related-vulnerability",
                "href": "https://trendmicro2.app.blackduck.com/api/vulnerabilities/CVE-2020-14343",
                "label": "NVD"
            },
            {
                "rel": "bdsa-ranges",
                "href": "https://trendmicro2.app.blackduck.com/api/vulnerabilities/BDSA-2020-4163/ranges"
            },
            {
                "rel": "reference",
                "href": "https://github.com/yaml/pyyaml/commit/0cedb2a0697b2bc49e4f3841b8d4590b6b15657e",
                "label": "INTRODUCTORY_COMMIT"
            },
            {
                "rel": "reference",
                "href": "https://github.com/yaml/pyyaml/commit/a001f2782501ad2d24986959f0239a354675f9dc",
                "label": "VENDOR_UPGRADE"
            },
            {
                "rel": "reference",
                "href": "https://github.com/yaml/pyyaml/commits/5.4b1",
                "label": "VENDOR_UPGRADE"
            },
            {
                "rel": "reference",
                "href": "https://github.com/yaml/pyyaml/issues/420",
                "label": "ADVISORY"
            },
            {
                "rel": "reference",
                "href": "https://github.com/yaml/pyyaml/issues/420",
                "label": "POC"
            },
            {
                "rel": "reference",
                "href": "https://github.com/yaml/pyyaml/issues/420",
                "label": "WORKAROUND"
            },
            {
                "rel": "reference",
                "href": "https://github.com/yaml/pyyaml/tags",
                "label": "VENDOR_UPGRADE"
            },
            {
                "rel": "default-remediation-status",
                "href": "https://trendmicro2.app.blackduck.com/api/vulnerabilities/BDSA-2020-4163/default-remediation-status"
            }
        ]
    }
}