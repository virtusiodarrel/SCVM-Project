{
    "source": "BDSA",
    "name": "BDSA-2019-1532",
    "title": "OpenBSD Vulnerable to Denial-of-Service (DoS) via Improper IPv6 Packet Reassembly Logic",
    "description": "OpenBSD and FreeBSD are vulnerable to denial-of-service (DoS) due to flaws in how fragmented data packets are reassembled. A remote attacker could cause an instance of the application that is running the packet filter to crash by providing crafted network traffic.",
    "technicalDescription": "The function `pf_reassemble6()`, which is defined within `pf_norm.c`, contains code that is used by OpenBSD in the reconstruction of fragmented IPv6 packets. In order to carry out the reconstruction process,  the application needs to know where the payload fragment within each packet is located. As this will follow the IPv6 extension headers within the packet, the total size of these headers is used as the offset to the payload fragment. This value is stored within the `fe_hdrlen` component of the `frent` structure. All of the extension headers present in the initial IPv6 packet will be stored in the memory buffer `mbuf`.\n\nThe IPv6 packets that contain payload fragments will each contain a fragment extension header. The extension header that precedes this will indicate that the following extension header is of type `fragment` within its  `next_header` field. The reassembled packet will not contain a fragment extension header, and so this `next_header` field must be updated during the reassembly process. The value that it is updated to will be determined based on the nature of the payload. For example, if the payload is a TCP packet, the `next_header` field must be updated to indicate this. The offset of the extension header to be updated is calculated using the last fragment packet that was received, and is stored within the variable `extoff`. \n\nThe application will then attempt to update the extension header that is present at the offset denoted by `extoff` within the buffer `mbuf`. It is at this point that the vulnerability manifests itself. The extension headers present within `mbuf` will be those of the first fragment packet that was received, and `extoff` is the offset of the extension header to be updated as found within the final fragment packet received. Any discrepancy between the number of extension headers present in the first and last fragment packets will therefore cause the application to access an incorrect location in memory. This can have several possible detrimental effects. If the offset `extoff` resolves to a location outside of the boundaries of `mbuf`, the function `panic()` will be executed, halting program execution. It is possible that the header patching process will succeed, albeit with the wrong header having been patched. This will cause problems further along the execution flow of the program, which will also cause the application to crash. Alternatively, the packet state may be such that filter rules can be bypassed.\n\nA remote attacker could therefore cause a denial-of-service (DoS) by providing crafted IPv6 fragment packets in which the number of extension headers vary.",
    "publishedDate": "2019-05-24T15:00:45.300Z",
    "updatedDate": "2019-05-24T15:00:45.281Z",
    "disclosureDate": "2019-03-01T00:00:00.000Z",
    "exploitPublishDate": "2019-03-01T00:00:00.000Z",
    "solution": "Fixed in version [**12.0-RELEASE-p4**](https://svnweb.freebsd.org/ports/tags/) and version  [**11.2-RELEASE-p10**](https://svnweb.freebsd.org/ports/tags/) of FreeBSD by [this](https://svnweb.freebsd.org/base?view=revision&revision=r347591) commit.\n\nFixed in version [**6.5**](https://www.openbsd.org/65.html) of OpenBSD by [this](https://ftp.openbsd.org/pub/OpenBSD/patches/6.4/common/014_pf6frag.patch.sig) commit.",
    "severity": "MEDIUM",
    "cvss2": {
        "baseScore": 6.4,
        "impactSubscore": 4.9,
        "exploitabilitySubscore": 10.0,
        "severity": "MEDIUM",
        "accessVector": "NETWORK",
        "accessComplexity": "LOW",
        "authentication": "NONE",
        "confidentialityImpact": "PARTIAL",
        "integrityImpact": "NONE",
        "availabilityImpact": "PARTIAL",
        "temporalMetrics": {
            "exploitability": "PROOF_OF_CONCEPT",
            "remediationLevel": "OFFICIAL_FIX",
            "reportConfidence": "CONFIRMED",
            "score": 5.0
        },
        "vector": "(AV:N/AC:L/Au:N/C:P/I:N/A:P/E:POC/RL:OF/RC:C)"
    },
    "cvss3": {
        "baseScore": 6.5,
        "impactSubscore": 2.5,
        "exploitabilitySubscore": 3.9,
        "severity": "MEDIUM",
        "attackVector": "NETWORK",
        "attackComplexity": "LOW",
        "confidentialityImpact": "LOW",
        "integrityImpact": "NONE",
        "availabilityImpact": "LOW",
        "privilegesRequired": "NONE",
        "scope": "UNCHANGED",
        "userInteraction": "NONE",
        "temporalMetrics": {
            "exploitability": "PROOF_OF_CONCEPT",
            "remediationLevel": "OFFICIAL_FIX",
            "reportConfidence": "CONFIRMED",
            "score": 5.9
        },
        "vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:L/E:P/RL:O/RC:C"
    },
    "useCvss3": true,
    "classifications": [],
    "zeroDay": false,
    "underReview": false,
    "parentAdvisory": false,
    "workaround": "This vulnerability can be mitigated by disabling packet reassembly within the Packet Filter component. To do so, use the following directive within the Packet Filter's configuration:\n\n`set reassemble no`",
    "vendorFixDate": "2019-03-01T00:00:00.000Z",
    "bdsaTags": [],
    "overallScore": 5.9,
    "_meta": {
        "allow": [
            "GET"
        ],
        "href": "https://trendmicro2.app.blackduck.com/api/vulnerabilities/BDSA-2019-1532",
        "links": [
            {
                "rel": "cwes",
                "href": "https://trendmicro2.app.blackduck.com/api/cwes/CWE-118"
            },
            {
                "rel": "related-vulnerability",
                "href": "https://trendmicro2.app.blackduck.com/api/vulnerabilities/CVE-2019-5597",
                "label": "NVD"
            },
            {
                "rel": "bdsa-ranges",
                "href": "https://trendmicro2.app.blackduck.com/api/vulnerabilities/BDSA-2019-1532/ranges"
            },
            {
                "rel": "reference",
                "href": "https://ftp.openbsd.org/pub/OpenBSD/patches/6.4/common/014_pf6frag.patch.sig",
                "label": "PATCH"
            },
            {
                "rel": "reference",
                "href": "https://svnweb.freebsd.org/base?view=revision&revision=r347591",
                "label": "PATCH"
            },
            {
                "rel": "reference",
                "href": "https://svnweb.freebsd.org/ports/tags/",
                "label": "VENDOR_UPGRADE"
            },
            {
                "rel": "reference",
                "href": "https://www.freebsd.org/security/advisories/FreeBSD-SA-19:05.pf.asc",
                "label": "ADVISORY"
            },
            {
                "rel": "reference",
                "href": "https://www.openbsd.org/65.html",
                "label": "VENDOR_UPGRADE"
            },
            {
                "rel": "reference",
                "href": "https://www.synacktiv.com/ressources/Synacktiv_OpenBSD_PacketFilter_CVE-2019-5597_ipv6_frag.pdf",
                "label": "POC"
            },
            {
                "rel": "default-remediation-status",
                "href": "https://trendmicro2.app.blackduck.com/api/vulnerabilities/BDSA-2019-1532/default-remediation-status"
            }
        ]
    }
}