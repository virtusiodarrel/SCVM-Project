{
    "source": "BDSA",
    "name": "BDSA-2020-4553",
    "title": "mbed TLS vulnerable to Sensitive Data Exposure via Side-Channel Timing Attack",
    "description": "mbed TLS is vulnerable to information exposure via a side channel timing attack. This can allow an attacker with access to precise enough timing and memory access information to fully recover the ECC private key.",
    "technicalDescription": "This vulnerability occurs during scalar multiplication in mbed TLS. This operation is meant to accept a random number generator (RNG) in order to protect it against some attacks. However there are two instances when there is a failure to pass a RNG to the scalar multiplication:\n* When mbed TLS loads a private key that doesn't include the uncompressed public key in `mbedtls_ecp_check_pub_priv()` and `mbedtls_pk_parse_key()` functions.\n* When `mbedtls_ecp_mul()` and `mbedtls_ecp_mul_restartable()` are called with a NULL `f_rng` argument.",
    "publishedDate": "2021-07-21T14:12:22.626Z",
    "updatedDate": "2021-07-21T14:12:22.620Z",
    "disclosureDate": "2020-07-19T00:00:00.000Z",
    "solution": "Fixed in:\n* [**2.23.0**](https://github.com/ARMmbed/mbedtls/releases/tag/mbedtls-2.23.0)\n* [**2.16.7**](https://github.com/ARMmbed/mbedtls/releases/tag/mbedtls-2.16.7) \n* [**2.7.16**](https://github.com/ARMmbed/mbedtls/releases/tag/mbedtls-2.7.16) \n\nThe latest stable releases are available [here](https://github.com/ARMmbed/mbedtls/releases).",
    "severity": "MEDIUM",
    "cvss2": {
        "baseScore": 1.2,
        "impactSubscore": 2.9,
        "exploitabilitySubscore": 1.9,
        "severity": "LOW",
        "accessVector": "LOCAL",
        "accessComplexity": "HIGH",
        "authentication": "NONE",
        "confidentialityImpact": "PARTIAL",
        "integrityImpact": "NONE",
        "availabilityImpact": "NONE",
        "temporalMetrics": {
            "exploitability": "UNPROVEN",
            "remediationLevel": "OFFICIAL_FIX",
            "reportConfidence": "CONFIRMED",
            "score": 0.9
        },
        "vector": "(AV:L/AC:H/Au:N/C:P/I:N/A:N/E:U/RL:OF/RC:C)"
    },
    "cvss3": {
        "baseScore": 5.1,
        "impactSubscore": 3.6,
        "exploitabilitySubscore": 1.4,
        "severity": "MEDIUM",
        "attackVector": "LOCAL",
        "attackComplexity": "HIGH",
        "confidentialityImpact": "HIGH",
        "integrityImpact": "NONE",
        "availabilityImpact": "NONE",
        "privilegesRequired": "NONE",
        "scope": "UNCHANGED",
        "userInteraction": "NONE",
        "temporalMetrics": {
            "exploitability": "UNPROVEN",
            "remediationLevel": "OFFICIAL_FIX",
            "reportConfidence": "CONFIRMED",
            "score": 4.5
        },
        "vector": "CVSS:3.1/AV:L/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N/E:U/RL:O/RC:C"
    },
    "useCvss3": true,
    "classifications": [],
    "zeroDay": false,
    "underReview": false,
    "parentAdvisory": false,
    "credit": "Alejandro Cabrera Aldaya, Billy Brumley",
    "workaround": "The vendor has provided the following [workarounds](https://tls.mbed.org/tech-updates/security-advisories/mbedtls-security-advisory-2020-07):\n\n> For the parsing functions, making sure all keys being parsed always include the uncompressed public key avoids the vulnerability.\n> \n> For the pair-checking functions, there is no work-around except refraining from using them (they're never called from any other library function).\n> \n> If your application calls `mbedtls_ecp_mul()` or `mbedtls_ecp_mul_restartable()` directly, you want to make sure that you're always passing a non-NULL `f_rng` parameter, pointing to a well-seeded instance of a secure RNG.",
    "vendorFixDate": "2020-06-16T00:00:00.000Z",
    "bdsaTags": [],
    "overallScore": 4.5,
    "_meta": {
        "allow": [],
        "href": "https://trendmicro.app.blackduck.com/api/vulnerabilities/BDSA-2020-4553",
        "links": [
            {
                "rel": "cwes",
                "href": "https://trendmicro.app.blackduck.com/api/cwes/CWE-310"
            },
            {
                "rel": "cwes",
                "href": "https://trendmicro.app.blackduck.com/api/cwes/CWE-385"
            },
            {
                "rel": "related-vulnerability",
                "href": "https://trendmicro.app.blackduck.com/api/vulnerabilities/CVE-2020-36422",
                "label": "NVD"
            },
            {
                "rel": "bdsa-ranges",
                "href": "https://trendmicro.app.blackduck.com/api/vulnerabilities/BDSA-2020-4553/ranges"
            },
            {
                "rel": "reference",
                "href": "https://bugs.gentoo.org/730752",
                "label": "ADVISORY"
            },
            {
                "rel": "reference",
                "href": "https://github.com/ARMmbed/mbedtls/releases",
                "label": "VENDOR_UPGRADE"
            },
            {
                "rel": "reference",
                "href": "https://github.com/ARMmbed/mbedtls/releases/tag/mbedtls-2.16.7",
                "label": "VENDOR_UPGRADE"
            },
            {
                "rel": "reference",
                "href": "https://github.com/ARMmbed/mbedtls/releases/tag/mbedtls-2.23.0",
                "label": "VENDOR_UPGRADE"
            },
            {
                "rel": "reference",
                "href": "https://github.com/ARMmbed/mbedtls/releases/tag/mbedtls-2.7.16",
                "label": "VENDOR_UPGRADE"
            },
            {
                "rel": "reference",
                "href": "https://tls.mbed.org/tech-updates/security-advisories/mbedtls-security-advisory-2020-07",
                "label": "ADVISORY"
            },
            {
                "rel": "reference",
                "href": "https://tls.mbed.org/tech-updates/security-advisories/mbedtls-security-advisory-2020-07",
                "label": "WORKAROUND"
            }
        ]
    }
}