{
    "source": "BDSA",
    "name": "BDSA-2019-3906",
    "title": "envoy Vulnerable to Denial-of-Service (DoS) and Privilege Escalation via Specially Crafted HTTP/2 Requests Causing Heap Buffer Overflow",
    "description": "envoy is vulnerable to a heap-based buffer overflow. A remote attacker able to send specially crafted HTTP/2 requests when the upstream server is HTTP/1 could cause a denial-of-service (DoS) and privilege escalation via writing to the heap buffer outside of its boundaries.",
    "technicalDescription": "envoy is vulnerable if it is configured to receive HTTP/2 requests from clients that may be proxied to HTTP/1 upstream servers. The flaw lies in the function `RequestStreamEncoderImpl::encodeHeaders` of the source file `source/common/http/http1/codec_impl.cc`. A `connection_.reserveBuffer()` call is made such that the buffer produced is not adequately sized for the aforementioned case. It assumes that the contents of the `:method` header field is less than 4KB. With HTTP/2, a limit on this headers value or size is not imposed.\n\nA proof of concept exploit exists that was made available to the developers. It allows total compromise of the application via overwriting of permission data structures, bypassing envoy\u2019s access control mechanisms.",
    "publishedDate": "2019-12-13T11:34:44.832Z",
    "updatedDate": "2019-12-13T11:34:44.821Z",
    "disclosureDate": "2019-12-10T00:00:00.000Z",
    "exploitPublishDate": "2019-12-10T00:00:00.000Z",
    "solution": "Fixed in [**1.12.2**](https://github.com/envoyproxy/envoy/releases/tag/v1.12.2) by [this](https://github.com/envoyproxy/envoy/commit/22c9fbd5673c8de33cc89d733f41ce338db3c8ad) commit.",
    "severity": "HIGH",
    "cvss2": {
        "baseScore": 7.5,
        "impactSubscore": 6.4,
        "exploitabilitySubscore": 10.0,
        "severity": "MEDIUM",
        "accessVector": "NETWORK",
        "accessComplexity": "LOW",
        "authentication": "NONE",
        "confidentialityImpact": "PARTIAL",
        "integrityImpact": "PARTIAL",
        "availabilityImpact": "PARTIAL",
        "temporalMetrics": {
            "exploitability": "PROOF_OF_CONCEPT",
            "remediationLevel": "OFFICIAL_FIX",
            "reportConfidence": "CONFIRMED",
            "score": 5.9
        },
        "vector": "(AV:N/AC:L/Au:N/C:P/I:P/A:P/E:POC/RL:OF/RC:C)"
    },
    "cvss3": {
        "baseScore": 9.8,
        "impactSubscore": 5.9,
        "exploitabilitySubscore": 3.9,
        "severity": "HIGH",
        "attackVector": "NETWORK",
        "attackComplexity": "LOW",
        "confidentialityImpact": "HIGH",
        "integrityImpact": "HIGH",
        "availabilityImpact": "HIGH",
        "privilegesRequired": "NONE",
        "scope": "UNCHANGED",
        "userInteraction": "NONE",
        "temporalMetrics": {
            "exploitability": "PROOF_OF_CONCEPT",
            "remediationLevel": "OFFICIAL_FIX",
            "reportConfidence": "CONFIRMED",
            "score": 8.8
        },
        "vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H/E:P/RL:O/RC:C"
    },
    "useCvss3": true,
    "classifications": [],
    "zeroDay": false,
    "underReview": false,
    "parentAdvisory": false,
    "credit": "oss-fuzz, Harvey Tuch, Google",
    "workaround": "The vendor supplies the following workarounds:\n> * Disable HTTP/2 protocol for clients.\n> * Disable HTTP/1 upstream servers.\n> * Reduce header size limits to below 2KB. It might be possible to configure as high as somewhere near 4KB, but 2KB is a conservative size. The relevant configuration is HTTP connection manager\u2019s max_request_headers_kb field.",
    "vendorFixDate": "2019-12-10T00:00:00.000Z",
    "bdsaTags": [],
    "overallScore": 8.8,
    "_meta": {
        "allow": [
            "GET"
        ],
        "href": "https://trendmicro2.app.blackduck.com/api/vulnerabilities/BDSA-2019-3906",
        "links": [
            {
                "rel": "cwes",
                "href": "https://trendmicro2.app.blackduck.com/api/cwes/CWE-122"
            },
            {
                "rel": "related-vulnerability",
                "href": "https://trendmicro2.app.blackduck.com/api/vulnerabilities/CVE-2019-18801",
                "label": "NVD"
            },
            {
                "rel": "bdsa-ranges",
                "href": "https://trendmicro2.app.blackduck.com/api/vulnerabilities/BDSA-2019-3906/ranges"
            },
            {
                "rel": "reference",
                "href": "https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=18431",
                "label": "ADVISORY"
            },
            {
                "rel": "reference",
                "href": "https://github.com/envoyproxy/envoy/commit/22c9fbd5673c8de33cc89d733f41ce338db3c8ad",
                "label": "PATCH"
            },
            {
                "rel": "reference",
                "href": "https://github.com/envoyproxy/envoy/releases/tag/v1.12.2",
                "label": "VENDOR_UPGRADE"
            },
            {
                "rel": "reference",
                "href": "https://github.com/envoyproxy/envoy/security/advisories/GHSA-gxvv-x4p2-rppp",
                "label": "ADVISORY"
            },
            {
                "rel": "reference",
                "href": "https://github.com/envoyproxy/envoy/security/advisories/GHSA-gxvv-x4p2-rppp",
                "label": "POC"
            },
            {
                "rel": "reference",
                "href": "https://groups.google.com/forum/#!topic/envoy-users/m7z5fGkCzPI",
                "label": "ADVISORY"
            },
            {
                "rel": "default-remediation-status",
                "href": "https://trendmicro2.app.blackduck.com/api/vulnerabilities/BDSA-2019-3906/default-remediation-status"
            }
        ]
    }
}