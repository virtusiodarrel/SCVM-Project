{
    "source": "BDSA",
    "name": "BDSA-2019-4148",
    "title": "Waitress Vulnerable to HTTP Request Smuggling via Improper HTTP Request Header Parsing",
    "description": "Waitress is vulnerable to HTTP request smuggling due to the improper handling of certain characters within client requests. A remote attacker could cause manipulated content to be served to other users, or could potentially cause the disclosure of sensitive information.",
    "technicalDescription": "HTTP requests that are received from clients are parsed by Waitress primarily using functions contained within the file `parser.py`. The headers contained in the request are parsed via the function `parse_header()`, which attempts to strip off any whitespace. This function uses regular expressions in order to try and match whitespace characters. However, the logic used to perform this is improperly implemented such that non-printable non-whitespace characters may be interpreted as whitespace. In cases where a proxy server is used in front of the Waitress application, a maliciously crafted HTTP request could be provided by a client that will be parsed differently by the front-end server and the Waitress back end. This could lead to HTTP request splitting, which could potentially cause maliciously manipulated web content to be served to other users. This could also lead to the disclosure of sensitive information.\n\nIt should be noted that an incomplete fix for this vulnerability was included in release `1.4.1`. This fix did not properly ensure that Waitress will not treat non-printable characters as whitespace.",
    "publishedDate": "2020-01-07T15:45:19.253Z",
    "updatedDate": "2020-07-15T09:47:27.324Z",
    "disclosureDate": "2019-12-24T00:00:00.000Z",
    "exploitPublishDate": "2019-12-24T00:00:00.000Z",
    "solution": "Fixed in version [**1.4.2**](https://github.com/Pylons/waitress/releases/tag/v1.4.2) by [this](https://github.com/Pylons/waitress/commit/634d991ff4e0f7fd5f30c0cbedec29133071a455) commit.",
    "severity": "HIGH",
    "cvss2": {
        "baseScore": 6.4,
        "impactSubscore": 4.9,
        "exploitabilitySubscore": 10.0,
        "severity": "MEDIUM",
        "accessVector": "NETWORK",
        "accessComplexity": "LOW",
        "authentication": "NONE",
        "confidentialityImpact": "PARTIAL",
        "integrityImpact": "PARTIAL",
        "availabilityImpact": "NONE",
        "temporalMetrics": {
            "exploitability": "PROOF_OF_CONCEPT",
            "remediationLevel": "OFFICIAL_FIX",
            "reportConfidence": "CONFIRMED",
            "score": 5.0
        },
        "vector": "(AV:N/AC:L/Au:N/C:P/I:P/A:N/E:POC/RL:OF/RC:C)"
    },
    "cvss3": {
        "baseScore": 9.1,
        "impactSubscore": 5.2,
        "exploitabilitySubscore": 3.9,
        "severity": "HIGH",
        "attackVector": "NETWORK",
        "attackComplexity": "LOW",
        "confidentialityImpact": "HIGH",
        "integrityImpact": "HIGH",
        "availabilityImpact": "NONE",
        "privilegesRequired": "NONE",
        "scope": "UNCHANGED",
        "userInteraction": "NONE",
        "temporalMetrics": {
            "exploitability": "PROOF_OF_CONCEPT",
            "remediationLevel": "OFFICIAL_FIX",
            "reportConfidence": "CONFIRMED",
            "score": 8.2
        },
        "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:N/E:P/RL:O/RC:C"
    },
    "useCvss3": true,
    "classifications": [],
    "zeroDay": false,
    "underReview": false,
    "parentAdvisory": false,
    "credit": "ZeddYu Lu",
    "workaround": "The vendor states that the following workarounds are possible:\n* You may enable additional protections on front-end servers, those that follow RFC7230 correctly would drop the request with a 400 Bad Request.\n* Waitress will now correctly responds to the request with a 400 Bad Request, and will drop the connection to avoid any potential HTTP pipelining issues.",
    "vendorFixDate": "2019-12-24T00:00:00.000Z",
    "bdsaTags": [],
    "overallScore": 8.2,
    "_meta": {
        "allow": [
            "GET"
        ],
        "href": "https://trendmicro2.app.blackduck.com/api/vulnerabilities/BDSA-2019-4148",
        "links": [
            {
                "rel": "cwes",
                "href": "https://trendmicro2.app.blackduck.com/api/cwes/CWE-444"
            },
            {
                "rel": "related-vulnerability",
                "href": "https://trendmicro2.app.blackduck.com/api/vulnerabilities/CVE-2019-16789",
                "label": "NVD"
            },
            {
                "rel": "bdsa-ranges",
                "href": "https://trendmicro2.app.blackduck.com/api/vulnerabilities/BDSA-2019-4148/ranges"
            },
            {
                "rel": "reference",
                "href": "https://github.com/Pylons/waitress/commit/634d991ff4e0f7fd5f30c0cbedec29133071a455",
                "label": "PATCH"
            },
            {
                "rel": "reference",
                "href": "https://github.com/Pylons/waitress/releases/tag/v1.4.2",
                "label": "VENDOR_UPGRADE"
            },
            {
                "rel": "reference",
                "href": "https://github.com/Pylons/waitress/security/advisories/GHSA-m5ff-3wj3-8ph4",
                "label": "ADVISORY"
            },
            {
                "rel": "reference",
                "href": "https://github.com/Pylons/waitress/security/advisories/GHSA-m5ff-3wj3-8ph4",
                "label": "POC"
            },
            {
                "rel": "reference",
                "href": "https://github.com/Pylons/waitress/security/advisories/GHSA-m5ff-3wj3-8ph4",
                "label": "WORKAROUND"
            },
            {
                "rel": "default-remediation-status",
                "href": "https://trendmicro2.app.blackduck.com/api/vulnerabilities/BDSA-2019-4148/default-remediation-status"
            }
        ]
    }
}