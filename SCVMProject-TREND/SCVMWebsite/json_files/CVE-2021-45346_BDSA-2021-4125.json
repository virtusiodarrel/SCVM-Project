{
    "source": "BDSA",
    "name": "BDSA-2021-4125",
    "title": "SQLite Vulnerable to Information Disclosure via Maliciously Crafted Queries",
    "description": "An information disclosure vulnerability was discovered in SQLite. An attacker could exploit this using crafted queries in order to leak data within the database beyond the record.\n\n**Note**: the vendor disputes the security impact of this issue:\n> This is what CVE-2021-45346 is saying:\n> * Corrupt a database file such that two different rows are assigned overlapping storage space. Call those two rows X and Y.\n> * Trick the application into writing sensitive information into X.\n> * Read out the sensitive information by querying Y.\n> \n> Yes, you can do that in SQLite. You can also do it in just about every other RDBMS and every filesystem ever invented.\n> \n> .....\n> \n> Note that if you have sufficient write access such that you can corrupt the database file to cause storage space for two rows to overlap, then you could (with far less effort) just install a new trigger into the schema that causes content written into SENSITIVE_TABLE to be mirrored into PUBLIC_TABLE, and accomplish the same data exfiltration. Indeed, a similar attack will also work on any RDBMS.",
    "technicalDescription": "",
    "publishedDate": "2022-02-15T11:58:23.234Z",
    "updatedDate": "2022-06-20T10:14:32.074Z",
    "disclosureDate": "2021-12-15T00:00:00.000Z",
    "exploitPublishDate": "2021-12-15T00:00:00.000Z",
    "solution": "",
    "severity": "MEDIUM",
    "cvss2": {
        "baseScore": 2.1,
        "impactSubscore": 2.9,
        "exploitabilitySubscore": 3.9,
        "severity": "LOW",
        "accessVector": "NETWORK",
        "accessComplexity": "HIGH",
        "authentication": "SINGLE",
        "confidentialityImpact": "PARTIAL",
        "integrityImpact": "NONE",
        "availabilityImpact": "NONE",
        "temporalMetrics": {
            "exploitability": "PROOF_OF_CONCEPT",
            "remediationLevel": "WORKAROUND",
            "reportConfidence": "UNCONFIRMED",
            "score": 1.6
        },
        "vector": "(AV:N/AC:H/Au:S/C:P/I:N/A:N/E:POC/RL:W/RC:UC)"
    },
    "cvss3": {
        "baseScore": 5.3,
        "impactSubscore": 3.6,
        "exploitabilitySubscore": 1.6,
        "severity": "MEDIUM",
        "attackVector": "NETWORK",
        "attackComplexity": "HIGH",
        "confidentialityImpact": "HIGH",
        "integrityImpact": "NONE",
        "availabilityImpact": "NONE",
        "privilegesRequired": "LOW",
        "scope": "UNCHANGED",
        "userInteraction": "NONE",
        "temporalMetrics": {
            "exploitability": "PROOF_OF_CONCEPT",
            "remediationLevel": "WORKAROUND",
            "reportConfidence": "UNKNOWN",
            "score": 4.5
        },
        "vector": "CVSS:3.1/AV:N/AC:H/PR:L/UI:N/S:U/C:H/I:N/A:N/E:P/RL:W/RC:U"
    },
    "useCvss3": true,
    "classifications": [],
    "zeroDay": false,
    "underReview": true,
    "parentAdvisory": false,
    "credit": "@guyinatuxedo",
    "workaround": "The vendor recommends that using `PRAGMA quick_check` will detect and report any attempted database corruption.",
    "bdsaTags": [],
    "overallScore": 4.5,
    "_meta": {
        "allow": [
            "GET"
        ],
        "href": "https://trendmicro2.app.blackduck.com/api/vulnerabilities/BDSA-2021-4125",
        "links": [
            {
                "rel": "cwes",
                "href": "https://trendmicro2.app.blackduck.com/api/cwes/CWE-200"
            },
            {
                "rel": "related-vulnerability",
                "href": "https://trendmicro2.app.blackduck.com/api/vulnerabilities/CVE-2021-45346",
                "label": "NVD"
            },
            {
                "rel": "bdsa-ranges",
                "href": "https://trendmicro2.app.blackduck.com/api/vulnerabilities/BDSA-2021-4125/ranges"
            },
            {
                "rel": "reference",
                "href": "https://github.com/guyinatuxedo/sqlite3_record_leaking",
                "label": "ADVISORY"
            },
            {
                "rel": "reference",
                "href": "https://github.com/guyinatuxedo/sqlite3_record_leaking",
                "label": "POC"
            },
            {
                "rel": "reference",
                "href": "https://sqlite.org/forum/forumpost/53de8864ba114bf6",
                "label": "WORKAROUND"
            },
            {
                "rel": "default-remediation-status",
                "href": "https://trendmicro2.app.blackduck.com/api/vulnerabilities/BDSA-2021-4125/default-remediation-status"
            }
        ]
    }
}