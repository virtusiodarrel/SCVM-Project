{
    "source": "BDSA",
    "name": "BDSA-2022-2178",
    "title": "NextAuth Vulnerable to Authorization Bypass via Improper Email Validation in Sign-In Endpoint",
    "description": "NextAuth.js is vulnerable to the bypassing of internal authorization mechanisms due to the insufficient normalization of email addresses within the `EmailProvider` component. An attacker could access or modify restricted content by sending maliciously crafted requests to a vulnerable application's sign-in endpoint.\n\nIt should be noted that only applications that are using the `EmailProvider` component of NextAuth are vulnerable.",
    "technicalDescription": "",
    "publishedDate": "2022-08-04T13:55:07.196Z",
    "updatedDate": "2022-08-04T13:55:07.182Z",
    "disclosureDate": "2022-08-02T00:00:00.000Z",
    "solution": "Fixed in version [**4.10.3**](https://github.com/nextauthjs/next-auth/releases/tag/next-auth%40v4.10.3) by [this](https://github.com/nextauthjs/next-auth/commit/afb1fcdae3cc30445038ef588e491d139b916003) commit, and in version [**3.29.10**](https://www.npmjs.com/package/next-auth/v/3.29.10).\n\nThe latest stable releases can be found [here](https://www.npmjs.com/package/next-auth).",
    "severity": "HIGH",
    "cvss2": {
        "baseScore": 6.4,
        "impactSubscore": 4.9,
        "exploitabilitySubscore": 10.0,
        "severity": "MEDIUM",
        "accessVector": "NETWORK",
        "accessComplexity": "LOW",
        "authentication": "NONE",
        "confidentialityImpact": "PARTIAL",
        "integrityImpact": "PARTIAL",
        "availabilityImpact": "NONE",
        "temporalMetrics": {
            "exploitability": "UNPROVEN",
            "remediationLevel": "OFFICIAL_FIX",
            "reportConfidence": "CONFIRMED",
            "score": 4.7
        },
        "vector": "(AV:N/AC:L/Au:N/C:P/I:P/A:N/E:U/RL:OF/RC:C)"
    },
    "cvss3": {
        "baseScore": 9.1,
        "impactSubscore": 5.2,
        "exploitabilitySubscore": 3.9,
        "severity": "HIGH",
        "attackVector": "NETWORK",
        "attackComplexity": "LOW",
        "confidentialityImpact": "HIGH",
        "integrityImpact": "HIGH",
        "availabilityImpact": "NONE",
        "privilegesRequired": "NONE",
        "scope": "UNCHANGED",
        "userInteraction": "NONE",
        "temporalMetrics": {
            "exploitability": "UNPROVEN",
            "remediationLevel": "OFFICIAL_FIX",
            "reportConfidence": "CONFIRMED",
            "score": 7.9
        },
        "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:N/E:U/RL:O/RC:C"
    },
    "useCvss3": true,
    "classifications": [],
    "zeroDay": false,
    "underReview": false,
    "parentAdvisory": false,
    "workaround": "The vendor has stated [here](https://github.com/nextauthjs/next-auth/security/advisories/GHSA-xv97-c62v-4587) that the following workaround can be implemented:\n\n> If for some reason you cannot upgrade, you can normalize the incoming request like the following, using Advanced Initialization:\n// pages/api/auth/[...nextauth].ts\n\n`function normalize(identifier) {\n  // Get the first two elements only,\n  // separated by ``@`` from user input.\n  let [local, domain] = identifier.toLowerCase().trim().split(\"@\")\n  // The part before \"@\" can contain a \",\"\n  // but we remove it on the domain part\n  domain = domain.split(\",\")[0]\n  return ``${local}@${domain}``\n}\nexport default async function handler(req, res) {\n  if (req.body.email) req.body.email = normalize(req.body.email)\n  return await NextAuth(req, res, {/* your options */ })\n}`",
    "vendorFixDate": "2022-08-01T00:00:00.000Z",
    "vendorNotifiedDate": "2022-07-26T00:00:00.000Z",
    "bdsaTags": [],
    "overallScore": 7.9,
    "_meta": {
        "allow": [
            "GET"
        ],
        "href": "https://trendmicro2.app.blackduck.com/api/vulnerabilities/BDSA-2022-2178",
        "links": [
            {
                "rel": "cwes",
                "href": "https://trendmicro2.app.blackduck.com/api/cwes/CWE-20"
            },
            {
                "rel": "related-vulnerability",
                "href": "https://trendmicro2.app.blackduck.com/api/vulnerabilities/CVE-2022-35924",
                "label": "NVD"
            },
            {
                "rel": "bdsa-ranges",
                "href": "https://trendmicro2.app.blackduck.com/api/vulnerabilities/BDSA-2022-2178/ranges"
            },
            {
                "rel": "reference",
                "href": "https://github.com/nextauthjs/next-auth/commit/afb1fcdae3cc30445038ef588e491d139b916003",
                "label": "PATCH"
            },
            {
                "rel": "reference",
                "href": "https://github.com/nextauthjs/next-auth/releases/tag/next-auth%40v4.10.3",
                "label": "VENDOR_UPGRADE"
            },
            {
                "rel": "reference",
                "href": "https://github.com/nextauthjs/next-auth/security/advisories/GHSA-xv97-c62v-4587",
                "label": "ADVISORY"
            },
            {
                "rel": "reference",
                "href": "https://github.com/nextauthjs/next-auth/security/advisories/GHSA-xv97-c62v-4587",
                "label": "WORKAROUND"
            },
            {
                "rel": "reference",
                "href": "https://www.npmjs.com/package/next-auth",
                "label": "VENDOR_UPGRADE"
            },
            {
                "rel": "reference",
                "href": "https://www.npmjs.com/package/next-auth/v/3.29.10",
                "label": "VENDOR_UPGRADE"
            },
            {
                "rel": "default-remediation-status",
                "href": "https://trendmicro2.app.blackduck.com/api/vulnerabilities/BDSA-2022-2178/default-remediation-status"
            }
        ]
    }
}