{
    "source": "BDSA",
    "name": "BDSA-2022-0706",
    "title": "Parse Server Vulnerable to Remote Code Execution (RCE) via Command Injection due to Prototype Pollution",
    "description": "A prototype pollution vulnerability was discovered in Parse Server. This could allow an attacker to achieve command injection or to trigger a denial-of-service (DoS).\n\n**Note:** The Vendor states: \n> As part of the fix a new security feature scans for sensitive keywords in request data to prevent JavaScript prototype pollution. If such a keyword is found, the request is rejected with HTTP response code **400** and Parse Error **105** (`INVALID_KEY_NAME`). By default these keywords are: `{_bsontype: \"Code\"}`, `constructor`, `__proto__`. If you are using any of these keywords in your request data, you can override the default keywords by setting the new Parse Server option `requestKeywordDenylist` to `[]` and specify your own keywords as needed.",
    "technicalDescription": "This issue occurs in the `src/Controllers/DatabaseController.js` file due to insufficient protections against prototype pollution. It was mitigated by the addition of checks for `{_bsontype: \"Code\"}`, `__proto__` and `constructor` within the user-controlled `key` variable.",
    "publishedDate": "2022-03-15T16:43:22.880Z",
    "updatedDate": "2022-04-26T15:57:56.496Z",
    "disclosureDate": "2022-03-11T00:00:00.000Z",
    "exploitPublishDate": "2022-04-15T00:00:00.000Z",
    "solution": "Fixed in [**5.0.0-alpha.28**](https://github.com/parse-community/parse-server/releases/tag/5.0.0-alpha.28) by [this](https://github.com/parse-community/parse-server/commit/e569f402b1fd8648fb0d1523b71b2a03273902a5) commit, and in [**4.10.7**](https://github.com/parse-community/parse-server/releases/tag/4.10.7) by [this](https://github.com/parse-community/parse-server/commit/886bfd7cac69496e3f73d4bb536f0eec3cba0e4d) commit.\n\nThe latest stable releases can be found [here](https://github.com/parse-community/parse-server/tags).",
    "severity": "CRITICAL",
    "cvss2": {
        "baseScore": 7.5,
        "impactSubscore": 6.4,
        "exploitabilitySubscore": 10.0,
        "severity": "MEDIUM",
        "accessVector": "NETWORK",
        "accessComplexity": "LOW",
        "authentication": "NONE",
        "confidentialityImpact": "PARTIAL",
        "integrityImpact": "PARTIAL",
        "availabilityImpact": "PARTIAL",
        "temporalMetrics": {
            "exploitability": "PROOF_OF_CONCEPT",
            "remediationLevel": "OFFICIAL_FIX",
            "reportConfidence": "CONFIRMED",
            "score": 5.9
        },
        "vector": "(AV:N/AC:L/Au:N/C:P/I:P/A:P/E:POC/RL:OF/RC:C)"
    },
    "cvss3": {
        "baseScore": 10.0,
        "impactSubscore": 6.0,
        "exploitabilitySubscore": 3.9,
        "severity": "CRITICAL",
        "attackVector": "NETWORK",
        "attackComplexity": "LOW",
        "confidentialityImpact": "HIGH",
        "integrityImpact": "HIGH",
        "availabilityImpact": "HIGH",
        "privilegesRequired": "NONE",
        "scope": "CHANGED",
        "userInteraction": "NONE",
        "temporalMetrics": {
            "exploitability": "PROOF_OF_CONCEPT",
            "remediationLevel": "OFFICIAL_FIX",
            "reportConfidence": "CONFIRMED",
            "score": 9.0
        },
        "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:C/C:H/I:H/A:H/E:P/RL:O/RC:C"
    },
    "useCvss3": true,
    "classifications": [],
    "zeroDay": false,
    "underReview": false,
    "parentAdvisory": false,
    "credit": "Mikhail Shcherbakov @yuske / Cristian-Alexandru STAICU @cristianstaicu",
    "workaround": "Per the Vendor:\n\n> Although the fix is more broad and includes several aspects of the vulnerability, a quick and targeted fix can be achieved by patching the MongoDB Node.js driver and disable BSON code execution. To apply the patch, add the following code to be executed before starting Parse Server, for example in `index.js`.\n\n```\nconst BSON = require('bson');\n const internalDeserialize = BSON.prototype.deserialize;\n BSON.prototype.deserialize = (buffer, options = Object.create(null), ...others) => {\n   if (options.constructor) {\n     options = Object.assign(Object.create(null), options);\n   }\n   return internalDeserialize(buffer, options, ...others);\n };\n const internalDeserializeStream = BSON.prototype.deserializeStream;\n BSON.prototype.deserializeStream = (\n   data,\n   startIndex,\n   numberOfDocuments,\n   documents,\n   docStartIndex,\n   options = Object.create(null),\n   ...others\n ) => {\n   if (options.constructor) {\n     options = Object.assign(Object.create(null), options);\n   }\n   return internalDeserializeStream(\n     data,\n     startIndex,\n     numberOfDocuments,\n     documents,\n     docStartIndex,\n     options,\n     ...others\n   );\n };\n```",
    "vendorFixDate": "2022-03-11T00:00:00.000Z",
    "bdsaTags": [
        "RCE"
    ],
    "overallScore": 9.0,
    "_meta": {
        "allow": [
            "GET"
        ],
        "href": "https://trendmicro2.app.blackduck.com/api/vulnerabilities/BDSA-2022-0706",
        "links": [
            {
                "rel": "cwes",
                "href": "https://trendmicro2.app.blackduck.com/api/cwes/CWE-471"
            },
            {
                "rel": "cwes",
                "href": "https://trendmicro2.app.blackduck.com/api/cwes/CWE-77"
            },
            {
                "rel": "related-vulnerability",
                "href": "https://trendmicro2.app.blackduck.com/api/vulnerabilities/CVE-2022-24760",
                "label": "NVD"
            },
            {
                "rel": "bdsa-ranges",
                "href": "https://trendmicro2.app.blackduck.com/api/vulnerabilities/BDSA-2022-0706/ranges"
            },
            {
                "rel": "reference",
                "href": "https://github.com/parse-community/parse-server/commit/886bfd7cac69496e3f73d4bb536f0eec3cba0e4d",
                "label": "PATCH"
            },
            {
                "rel": "reference",
                "href": "https://github.com/parse-community/parse-server/commit/e569f402b1fd8648fb0d1523b71b2a03273902a5",
                "label": "PATCH"
            },
            {
                "rel": "reference",
                "href": "https://github.com/parse-community/parse-server/pull/7841",
                "label": "ADVISORY"
            },
            {
                "rel": "reference",
                "href": "https://github.com/parse-community/parse-server/releases/tag/4.10.7",
                "label": "VENDOR_UPGRADE"
            },
            {
                "rel": "reference",
                "href": "https://github.com/parse-community/parse-server/releases/tag/5.0.0-alpha.28",
                "label": "VENDOR_UPGRADE"
            },
            {
                "rel": "reference",
                "href": "https://github.com/parse-community/parse-server/security/advisories/GHSA-p6h4-93qp-jhcm",
                "label": "ADVISORY"
            },
            {
                "rel": "reference",
                "href": "https://github.com/parse-community/parse-server/security/advisories/GHSA-p6h4-93qp-jhcm",
                "label": "WORKAROUND"
            },
            {
                "rel": "reference",
                "href": "https://github.com/parse-community/parse-server/tags",
                "label": "VENDOR_UPGRADE"
            },
            {
                "rel": "reference",
                "href": "https://www.huntr.dev/bounties/ac24b343-e7da-4bc7-ab38-4f4f5cc9d099/",
                "label": "POC"
            },
            {
                "rel": "default-remediation-status",
                "href": "https://trendmicro2.app.blackduck.com/api/vulnerabilities/BDSA-2022-0706/default-remediation-status"
            }
        ]
    }
}