{
    "source": "BDSA",
    "name": "BDSA-2019-3376",
    "title": "OpenAFS Vulnerable to Information Exposure via Uninitialized Output Variables",
    "description": "OpenAFS is vulnerable to information leakage via uninitialized RPC output variables being sent over the network to a peer. The amount and rate of data exposure is very context-dependent since the memory allocator behavior and other load on the system dictate exactly what information is leaked.",
    "technicalDescription": "AFS-3 RPCs use the XDR encoding to represent input/output arguments, and OpenAFS uses an XDR en/decoder that is tightly linked to the Rx protocol implementation. Generated RPC handler code deals with the allocation of storage/variables for the input and output variables as well as reading the input parameters from the network into local storage before calling the function which implements the RPC logic.  After this call the generated code takes care of encoding the output parameters into Rx packets and sending them to the peer as needed, before returning control to the caller.  \n\nIf the handler returns an error, the Rx layer will abort the current Rx call to notify the peer that the operation failed. Well-behaved peers will discard any information obtained from the aborted call. The generated code was going through the encoding step even when the resulting data would not be of use to well-behaved peers. In certain cases the output parameters remained uninitialized in the case of an error being returned. This means that for non-well-behaved peers, a large incomplete response could include data from uninitialized memory in the RPC handler.   \n\nRPCs that produce large responses are most at risk, as well as configurations that use small MTU values. Leaving output variables uninitialized on errors is a common phenomenon so many RPCs are expected to be at risk. Currently no code paths in the cache manager are known to trigger this problem, but the risk has not been conclusively shown to be absent, so clients are potentially affected as well.",
    "publishedDate": "2019-12-02T14:17:27.305Z",
    "updatedDate": "2019-12-02T14:17:27.296Z",
    "disclosureDate": "2019-10-22T00:00:00.000Z",
    "solution": "Fixed in [**1.6.24**](https://openafs.org/release/index.html) and [**1.8.5**](https://openafs.org/release/index.html) by [this](http://git.openafs.org/?p=openafs.git;a=commit;h=ea276e83e37e5bd27285a3d639f2158639172786) commit.",
    "severity": "MEDIUM",
    "cvss2": {
        "baseScore": 2.6,
        "impactSubscore": 2.9,
        "exploitabilitySubscore": 4.9,
        "severity": "LOW",
        "accessVector": "NETWORK",
        "accessComplexity": "HIGH",
        "authentication": "NONE",
        "confidentialityImpact": "PARTIAL",
        "integrityImpact": "NONE",
        "availabilityImpact": "NONE",
        "temporalMetrics": {
            "exploitability": "UNPROVEN",
            "remediationLevel": "OFFICIAL_FIX",
            "reportConfidence": "CONFIRMED",
            "score": 1.9
        },
        "vector": "(AV:N/AC:H/Au:N/C:P/I:N/A:N/E:U/RL:OF/RC:C)"
    },
    "cvss3": {
        "baseScore": 5.9,
        "impactSubscore": 3.6,
        "exploitabilitySubscore": 2.2,
        "severity": "MEDIUM",
        "attackVector": "NETWORK",
        "attackComplexity": "HIGH",
        "confidentialityImpact": "HIGH",
        "integrityImpact": "NONE",
        "availabilityImpact": "NONE",
        "privilegesRequired": "NONE",
        "scope": "UNCHANGED",
        "userInteraction": "NONE",
        "temporalMetrics": {
            "exploitability": "UNPROVEN",
            "remediationLevel": "OFFICIAL_FIX",
            "reportConfidence": "CONFIRMED",
            "score": 5.2
        },
        "vector": "CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N/E:U/RL:O/RC:C"
    },
    "useCvss3": true,
    "classifications": [],
    "zeroDay": false,
    "underReview": false,
    "parentAdvisory": false,
    "credit": "Andrew Deason",
    "workaround": "",
    "vendorFixDate": "2019-08-08T00:00:00.000Z",
    "bdsaTags": [],
    "overallScore": 5.2,
    "_meta": {
        "allow": [
            "GET"
        ],
        "href": "https://trendmicro2.app.blackduck.com/api/vulnerabilities/BDSA-2019-3376",
        "links": [
            {
                "rel": "cwes",
                "href": "https://trendmicro2.app.blackduck.com/api/cwes/CWE-200"
            },
            {
                "rel": "related-vulnerability",
                "href": "https://trendmicro2.app.blackduck.com/api/vulnerabilities/CVE-2019-18603",
                "label": "NVD"
            },
            {
                "rel": "bdsa-ranges",
                "href": "https://trendmicro2.app.blackduck.com/api/vulnerabilities/BDSA-2019-3376/ranges"
            },
            {
                "rel": "reference",
                "href": "http://git.openafs.org/?p=openafs.git;a=commit;h=ea276e83e37e5bd27285a3d639f2158639172786",
                "label": "PATCH"
            },
            {
                "rel": "reference",
                "href": "https://openafs.org/pages/security/OPENAFS-SA-2019-001.txt",
                "label": "ADVISORY"
            },
            {
                "rel": "reference",
                "href": "https://openafs.org/release/index.html",
                "label": "VENDOR_UPGRADE"
            },
            {
                "rel": "default-remediation-status",
                "href": "https://trendmicro2.app.blackduck.com/api/vulnerabilities/BDSA-2019-3376/default-remediation-status"
            }
        ]
    }
}