{
    "source": "BDSA",
    "name": "BDSA-2019-3374",
    "title": "Gorm Vulnerable to SQL Injection via Improper Parentheses Handling in 'buildCondition()' Function",
    "description": "Gorm is vulnerable to SQL injection due to the improper validation of client-provided input. An attacker could recover sensitive information from a back-end database, or could modify the contents of that database, by sending crafted web requests to the vulnerable application.",
    "technicalDescription": "The function `buildCondition()`, which is defined within the script `scope.go`, contains code that is used in the dynamic generation of SQL queries. The SQL clauses that are dynamically generated make use of parentheses as a delimiting character. The input that is received from a client is insufficiently validated, which can allow request parameters that contain parentheses to escape from the data context to the execution context of the SQL interpreter. This can allow an attacker to execute  SQL statements against the back-end database, which could potentially allow them to obtain sensitive information or even modify existing tables. It should be noted that the results produced by the SQL injection are not directly visible to the attacker, and so they will need to use blind SQL injection techniques in order to infer the contents of target tables within the database.\n\nA solution implemented by the vendor was included in version [**1.9.10**](https://github.com/jinzhu/gorm/releases/tag/v1.9.10) via [this](https://github.com/jinzhu/gorm/commit/e3cc5ea4d403078a370e299629da56cd011b6583) commit. However, it was found that although this solution was effective in mitigating the aforementioned SQL injection vulnerability, it can also prevent the application from responding to valid client queries (see references). The fix was reverted in release [**1.9.11**](https://github.com/jinzhu/gorm/releases/tag/v1.9.11).",
    "publishedDate": "2019-11-04T13:02:36.158Z",
    "updatedDate": "2019-11-04T13:02:36.146Z",
    "disclosureDate": "2019-06-21T00:00:00.000Z",
    "exploitPublishDate": "2019-06-21T00:00:00.000Z",
    "solution": "",
    "severity": "CRITICAL",
    "cvss2": {
        "baseScore": 7.5,
        "impactSubscore": 6.4,
        "exploitabilitySubscore": 10.0,
        "severity": "MEDIUM",
        "accessVector": "NETWORK",
        "accessComplexity": "LOW",
        "authentication": "NONE",
        "confidentialityImpact": "PARTIAL",
        "integrityImpact": "PARTIAL",
        "availabilityImpact": "PARTIAL",
        "temporalMetrics": {
            "exploitability": "PROOF_OF_CONCEPT",
            "remediationLevel": "WORKAROUND",
            "reportConfidence": "CONFIRMED",
            "score": 6.4
        },
        "vector": "(AV:N/AC:L/Au:N/C:P/I:P/A:P/E:POC/RL:W/RC:C)"
    },
    "cvss3": {
        "baseScore": 9.8,
        "impactSubscore": 5.9,
        "exploitabilitySubscore": 3.9,
        "severity": "CRITICAL",
        "attackVector": "NETWORK",
        "attackComplexity": "LOW",
        "confidentialityImpact": "HIGH",
        "integrityImpact": "HIGH",
        "availabilityImpact": "HIGH",
        "privilegesRequired": "NONE",
        "scope": "UNCHANGED",
        "userInteraction": "NONE",
        "temporalMetrics": {
            "exploitability": "PROOF_OF_CONCEPT",
            "remediationLevel": "WORKAROUND",
            "reportConfidence": "CONFIRMED",
            "score": 9.0
        },
        "vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H/E:P/RL:W/RC:C"
    },
    "useCvss3": true,
    "classifications": [],
    "zeroDay": false,
    "underReview": true,
    "parentAdvisory": false,
    "workaround": "The vendor has stated that the code that performs parentheses pattern matching can be circumvented using the following code snippet:\n`db = db.NewScope(nil).Raw(problemSQL).Exec().DB()`",
    "bdsaTags": [],
    "overallScore": 9.0,
    "_meta": {
        "allow": [
            "GET"
        ],
        "href": "https://trendmicro2.app.blackduck.com/api/vulnerabilities/BDSA-2019-3374",
        "links": [
            {
                "rel": "cwes",
                "href": "https://trendmicro2.app.blackduck.com/api/cwes/CWE-89"
            },
            {
                "rel": "related-vulnerability",
                "href": "https://trendmicro2.app.blackduck.com/api/vulnerabilities/CVE-2019-15562",
                "label": "NVD"
            },
            {
                "rel": "bdsa-ranges",
                "href": "https://trendmicro2.app.blackduck.com/api/vulnerabilities/BDSA-2019-3374/ranges"
            },
            {
                "rel": "reference",
                "href": "https://github.com/jinzhu/gorm/commit/e3cc5ea4d403078a370e299629da56cd011b6583",
                "label": "LINK"
            },
            {
                "rel": "reference",
                "href": "https://github.com/jinzhu/gorm/issues/2517",
                "label": "ADVISORY"
            },
            {
                "rel": "reference",
                "href": "https://github.com/jinzhu/gorm/issues/2517",
                "label": "POC"
            },
            {
                "rel": "reference",
                "href": "https://github.com/jinzhu/gorm/issues/2561",
                "label": "LINK"
            },
            {
                "rel": "reference",
                "href": "https://github.com/jinzhu/gorm/issues/2561",
                "label": "WORKAROUND"
            },
            {
                "rel": "reference",
                "href": "https://github.com/jinzhu/gorm/releases/tag/v1.9.10",
                "label": "LINK"
            },
            {
                "rel": "reference",
                "href": "https://github.com/jinzhu/gorm/releases/tag/v1.9.11",
                "label": "LINK"
            },
            {
                "rel": "default-remediation-status",
                "href": "https://trendmicro2.app.blackduck.com/api/vulnerabilities/BDSA-2019-3374/default-remediation-status"
            }
        ]
    }
}